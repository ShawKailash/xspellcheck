{"ast":null,"code":"var _jsxFileName = \"/workspaces/xspellcheck/src/SpellCheck.js\";\nimport React from \"react\";\n\n// Define a custom dictionary of words and their corrections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst customDictionary = {\n  teh: \"the\",\n  wrok: \"work\",\n  fot: \"for\",\n  exampl: \"example\"\n};\nclass SpellCheck extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleInputChange = e => {\n      const text = e.target.value;\n      this.setState({\n        inputText: text\n      });\n\n      // Implement a basic spelling check and correction\n      const words = text.split(\" \");\n      const correctedWords = words.map(word => {\n        const correctedWord = customDictionary[word.toLowerCase()];\n        return correctedWord || word;\n      });\n      const correctedText = correctedWords.join(\" \");\n\n      // Set the suggested text (first corrected word)\n      const firstCorrection = correctedWords.find((word, index) => word !== words[index]);\n      this.setState({\n        suggestedText: firstCorrection || \"\"\n      });\n    };\n    this.state = {\n      inputText: \"\",\n      suggestedText: \"\"\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Spell Check and Auto-Correction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: this.state.inputText,\n        onChange: this.handleInputChange,\n        placeholder: \"Enter text...\",\n        rows: 5,\n        cols: 40\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), this.state.suggestedText && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Did you mean: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: this.state.suggestedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 27\n        }, this), \"?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default SpellCheck;","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","customDictionary","teh","wrok","fot","exampl","SpellCheck","Component","constructor","props","handleInputChange","e","text","target","value","setState","inputText","words","split","correctedWords","map","word","correctedWord","toLowerCase","correctedText","join","firstCorrection","find","index","suggestedText","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","rows","cols"],"sources":["/workspaces/xspellcheck/src/SpellCheck.js"],"sourcesContent":["import React from \"react\";\n\n// Define a custom dictionary of words and their corrections\nconst customDictionary = {\n  teh: \"the\",\n  wrok: \"work\",\n  fot: \"for\",\n  exampl: \"example\",\n};\n\nclass SpellCheck extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputText: \"\",\n      suggestedText: \"\",\n    };\n  }\n\n  handleInputChange = (e) => {\n    const text = e.target.value;\n    this.setState({ inputText: text });\n\n    // Implement a basic spelling check and correction\n    const words = text.split(\" \");\n    const correctedWords = words.map((word) => {\n      const correctedWord = customDictionary[word.toLowerCase()];\n      return correctedWord || word;\n    });\n\n    const correctedText = correctedWords.join(\" \");\n\n    // Set the suggested text (first corrected word)\n    const firstCorrection = correctedWords.find(\n      (word, index) => word !== words[index]\n    );\n    this.setState({ suggestedText: firstCorrection || \"\" });\n  };\n\n  render() {\n    return (\n      <div>\n        <h1>Spell Check and Auto-Correction</h1>\n        <textarea\n          value={this.state.inputText}\n          onChange={this.handleInputChange}\n          placeholder=\"Enter text...\"\n          rows={5}\n          cols={40}\n        />\n        {this.state.suggestedText && (\n          <p>\n            Did you mean: <strong>{this.state.suggestedText}</strong>?\n          </p>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default SpellCheck;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAG;EACvBC,GAAG,EAAE,KAAK;EACVC,IAAI,EAAE,MAAM;EACZC,GAAG,EAAE,KAAK;EACVC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,UAAU,SAASR,KAAK,CAACS,SAAS,CAAC;EACvCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IAAC,KAOfC,iBAAiB,GAAIC,CAAC,IAAK;MACzB,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;MAC3B,IAAI,CAACC,QAAQ,CAAC;QAAEC,SAAS,EAAEJ;MAAK,CAAC,CAAC;;MAElC;MACA,MAAMK,KAAK,GAAGL,IAAI,CAACM,KAAK,CAAC,GAAG,CAAC;MAC7B,MAAMC,cAAc,GAAGF,KAAK,CAACG,GAAG,CAAEC,IAAI,IAAK;QACzC,MAAMC,aAAa,GAAGrB,gBAAgB,CAACoB,IAAI,CAACE,WAAW,CAAC,CAAC,CAAC;QAC1D,OAAOD,aAAa,IAAID,IAAI;MAC9B,CAAC,CAAC;MAEF,MAAMG,aAAa,GAAGL,cAAc,CAACM,IAAI,CAAC,GAAG,CAAC;;MAE9C;MACA,MAAMC,eAAe,GAAGP,cAAc,CAACQ,IAAI,CACzC,CAACN,IAAI,EAAEO,KAAK,KAAKP,IAAI,KAAKJ,KAAK,CAACW,KAAK,CACvC,CAAC;MACD,IAAI,CAACb,QAAQ,CAAC;QAAEc,aAAa,EAAEH,eAAe,IAAI;MAAG,CAAC,CAAC;IACzD,CAAC;IAxBC,IAAI,CAACI,KAAK,GAAG;MACXd,SAAS,EAAE,EAAE;MACba,aAAa,EAAE;IACjB,CAAC;EACH;EAsBAE,MAAMA,CAAA,EAAG;IACP,oBACE/B,OAAA;MAAAgC,QAAA,gBACEhC,OAAA;QAAAgC,QAAA,EAAI;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCpC,OAAA;QACEc,KAAK,EAAE,IAAI,CAACgB,KAAK,CAACd,SAAU;QAC5BqB,QAAQ,EAAE,IAAI,CAAC3B,iBAAkB;QACjC4B,WAAW,EAAC,eAAe;QAC3BC,IAAI,EAAE,CAAE;QACRC,IAAI,EAAE;MAAG;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,EACD,IAAI,CAACN,KAAK,CAACD,aAAa,iBACvB7B,OAAA;QAAAgC,QAAA,GAAG,gBACa,eAAAhC,OAAA;UAAAgC,QAAA,EAAS,IAAI,CAACF,KAAK,CAACD;QAAa;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,KAC3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAEV;AACF;AAEA,eAAe9B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}